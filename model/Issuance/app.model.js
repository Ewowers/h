const { DataTypes, Sequelize } = require("sequelize");
const sequelize = require("../../pg.config");

const land_info = sequelize.define(
  "Issuance_app",
  {
    id: { type: DataTypes.INTEGER, unique: true, autoIncrement: true, primaryKey: true },
    actOfReconciliation: { type: DataTypes.STRING },
    actOfReconciliationDate: { type: DataTypes.STRING },
    address: { type: DataTypes.STRING },
    addressFinished: { type: DataTypes.STRING },
    addressRegCode: { type: DataTypes.STRING },
    appId: { type: DataTypes.STRING },
    applicantIinBin: { type: DataTypes.STRING },
    applicantIsOrg: { type: DataTypes.BOOLEAN },
    applicantName: { type: DataTypes.STRING },
    applicantRejected: { type: DataTypes.STRING },
    approved: { type: DataTypes.STRING },
    approvedFile: { type: DataTypes.STRING },
    approvedFileOriginal: { type: DataTypes.STRING },
    approvedFileOzo: { type: DataTypes.STRING },
    apzId: { type: DataTypes.STRING },
    archSigned: { type: DataTypes.BOOLEAN },
    archSignedDate: { type: DataTypes.STRING },
    archSignedUserId: { type: DataTypes.STRING },
    archSignedUserIp: { type: DataTypes.STRING },
    archSignedXml: { type: DataTypes.STRING },
    archTech: { type: DataTypes.STRING },
    bin: { type: DataTypes.STRING },
    communalsChecked: { type: DataTypes.STRING },
    communalsCheckedDate: { type: DataTypes.STRING },
    control: { type: DataTypes.STRING },
    createDate: { type: DataTypes.DATE },
    currentExecutor: { type: DataTypes.STRING },
    currentOwner: { type: DataTypes.STRING },
    currentStatus: { type: DataTypes.STRING },
    currentTaskName: { type: DataTypes.STRING },
    deleted: { type: DataTypes.STRING },
    designerInfo: { type: DataTypes.STRING },
    electricInfo: { type: DataTypes.STRING },
    eskizFile: { type: DataTypes.STRING },
    factEndDate: { type: DataTypes.STRING },
    finishedCommission: { type: DataTypes.BOOLEAN },
    firstName: { type: DataTypes.STRING },
    gasInfo: { type: DataTypes.STRING },
    guid: { type: DataTypes.STRING },
    heatInfo: { type: DataTypes.STRING },
    iin: { type: DataTypes.STRING },
    landInfo: { type: DataTypes.STRING },
    landSelectionAgreement: { type: DataTypes.STRING },
    lastName: { type: DataTypes.STRING },
    mapImage: { type: DataTypes.STRING },
    newAddress: { type: DataTypes.STRING },
    numeration: { type: DataTypes.STRING },
    numerationDate: { type: DataTypes.STRING },
    objectInfo: { type: DataTypes.STRING },
    oldAddress: { type: DataTypes.STRING },
    onClarification: { type: DataTypes.STRING },
    onCommission: { type: DataTypes.BOOLEAN },
    onNumeration: { type: DataTypes.BOOLEAN },
    open: { type: DataTypes.BOOLEAN },
    org: { type: DataTypes.BOOLEAN },
    orgName: { type: DataTypes.STRING },
    otherApplicant: { type: DataTypes.BOOLEAN },
    ozoInfo: { type: DataTypes.STRING },
    ozoSigned: { type: DataTypes.BOOLEAN },
    ozoSignedDate: { type: DataTypes.STRING },
    ozoSignedUserId: { type: DataTypes.STRING },
    ozoSignedXml: { type: DataTypes.STRING },
    phone: { type: DataTypes.STRING },
    planEndDate: { type: DataTypes.STRING },
    projectAddress: { type: DataTypes.STRING },
    projectName: { type: DataTypes.STRING },
    regDate: { type: DataTypes.STRING },
    regNumber: { type: DataTypes.STRING },
    regionId: { type: DataTypes.INTEGER },
    rejectedFile: { type: DataTypes.STRING },
    rejectedFileOriginal: { type: DataTypes.STRING },
    requestNumber: { type: DataTypes.STRING },
    schemaZu: { type: DataTypes.STRING },
    secondName: { type: DataTypes.STRING },
    sewerageInfo: { type: DataTypes.STRING },
    signed: { type: DataTypes.BOOLEAN },
    signedDate: { type: DataTypes.STRING },
    signedXml: { type: DataTypes.STRING },
    subscribeEmail: { type: DataTypes.STRING },
    subservice: { type: DataTypes.JSON },
    toSing: { type: DataTypes.STRING },
    waterInfo: { type: DataTypes.STRING },
  },
  {}
);
land_info.sync();
module.exports = land_info;
